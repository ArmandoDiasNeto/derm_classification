#!/bin/bash
#PBS -l select=1:ngpus=1
#PBS -l walltime=12:00:00  
#PBS -j oe
#PBS -V 
#PBS -N TestJobLuma

# load modules
# module load cuda-toolkit/11.2.0 python/3.9.17 cudnn/8.0.5 gcc/12.2.0 NAMD/2.14-multicore-CUDA
module load cudnn/8.0.5 cuda-toolkit/11.8.0 
 
# change directory
#cd ${PBS_O_WORKDIR}
cd "/home/luma/experiments"

echo ${PBS_O_WORKDIR}

nvidia-smi

eval "$(conda shell.bash hook)"
conda activate tf

conda install -c nvidia cuda-nvcc
conda install -c conda-forge cudatoolkit=11.8.0
pip install nvidia-cudnn-cu11==8.6.0.163

CUDNN_PATH=$(dirname $(python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)"))
export LD_LIBRARY_PATH=$CUDNN_PATH/lib:$CONDA_PREFIX/lib/:$LD_LIBRARY_PATH

mkdir -p $CONDA_PREFIX/etc/conda/activate.d
echo 'CUDNN_PATH=$(dirname $(python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)"))' >> $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh
echo 'export LD_LIBRARY_PATH=$CUDNN_PATH/lib:$CONDA_PREFIX/lib/:$LD_LIBRARY_PATH' >> $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh

pip install tensorflow==2.13.*

# Verify install:
python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"


nvcc -V
python /home/luma/experiments/projects/derm_classification/src/main.py
#python src/test_libs.py  > output/saida
# qsub /home/luma/experiments/projects/derm_classification/job_scripts/job-gpu.job 
